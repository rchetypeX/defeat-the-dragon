"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   completeSession: function() { return /* binding */ completeSession; },\n/* harmony export */   getCurrentSession: function() { return /* binding */ getCurrentSession; },\n/* harmony export */   getPlayerData: function() { return /* binding */ getPlayerData; },\n/* harmony export */   startSession: function() { return /* binding */ startSession; },\n/* harmony export */   testApi: function() { return /* binding */ testApi; }\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(app-pages-browser)/./lib/supabase.ts\");\n\n/**\r\n * Get the current user's session token for API calls\r\n */ async function getAuthToken() {\n    console.log(\"API: Getting auth token...\");\n    // Always use mock token for now to avoid Supabase issues\n    console.log(\"API: Using mock token for development\");\n    return \"mock-token-for-development\";\n}\n/**\r\n * Make an authenticated API request\r\n */ async function apiRequest(endpoint) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    console.log(\"API: Making request to:\", endpoint);\n    const token = await getAuthToken();\n    console.log(\"API: Got token, length:\", token.length);\n    const controller = new AbortController();\n    const timeoutId = setTimeout(()=>{\n        console.log(\"API: Request timeout, aborting...\");\n        controller.abort();\n    }, 15000); // 15 second timeout\n    try {\n        console.log(\"API: Making fetch request...\");\n        const response = await fetch(\"/api\".concat(endpoint), {\n            ...options,\n            signal: controller.signal,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(token),\n                ...options.headers\n            }\n        });\n        clearTimeout(timeoutId);\n        console.log(\"API: Fetch request completed\");\n        console.log(\"API: Response status:\", response.status);\n        if (!response.ok) {\n            const errorData = await response.json().catch(()=>({}));\n            console.error(\"API: Request failed:\", errorData);\n            throw new Error(errorData.error || \"API request failed: \".concat(response.status));\n        }\n        const data = await response.json();\n        console.log(\"API: Request successful, data:\", data);\n        return data;\n    } catch (error) {\n        clearTimeout(timeoutId);\n        if (error.name === \"AbortError\") {\n            console.error(\"API: Request timed out\");\n            throw new Error(\"Request timed out\");\n        }\n        throw error;\n    }\n}\n/**\r\n * Test API connectivity\r\n */ async function testApi() {\n    console.log(\"API: testApi called\");\n    try {\n        const response = await fetch(\"/api/test\", {\n            method: \"GET\"\n        });\n        console.log(\"API: testApi response status:\", response.status);\n        const data = await response.json();\n        console.log(\"API: testApi response data:\", data);\n        return data;\n    } catch (error) {\n        console.error(\"API: testApi error:\", error);\n        throw error;\n    }\n}\n/**\r\n * Start a new focus session\r\n */ async function startSession(request) {\n    console.log(\"API: startSession called with:\", request);\n    try {\n        const response = await apiRequest(\"/sessions/start\", {\n            method: \"POST\",\n            body: JSON.stringify(request)\n        });\n        console.log(\"API: startSession response:\", response);\n        return response;\n    } catch (error) {\n        console.error(\"API: startSession error:\", error);\n        throw error;\n    }\n}\n/**\r\n * Complete a focus session\r\n */ async function completeSession(request) {\n    return apiRequest(\"/sessions/complete\", {\n        method: \"POST\",\n        body: JSON.stringify(request)\n    });\n}\n/**\r\n * Get current user's active session\r\n */ async function getCurrentSession() {\n    try {\n        const token = await getAuthToken();\n        if (!token) return null;\n        const { data: { user } } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.getUser();\n        if (!user) return null;\n        const { data: session } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"sessions\").select(\"*\").eq(\"user_id\", user.id).is(\"ended_at\", null).order(\"started_at\", {\n            ascending: false\n        }).limit(1).single();\n        return session;\n    } catch (error) {\n        console.error(\"API: Failed to get current session:\", error);\n        return null;\n    }\n}\n/**\r\n * Get current user's player data\r\n */ async function getPlayerData() {\n    try {\n        var _profileResult_data;\n        const { data: { user } } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.getUser();\n        if (!user) return null;\n        // Get player data and profile data in parallel\n        const [playerResult, profileResult] = await Promise.all([\n            _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"players\").select(\"*\").eq(\"user_id\", user.id).single(),\n            _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"profiles\").select(\"display_name\").eq(\"user_id\", user.id).single()\n        ]);\n        if (playerResult.error) {\n            throw playerResult.error;\n        }\n        // Combine player data with display name\n        const player = {\n            ...playerResult.data,\n            display_name: ((_profileResult_data = profileResult.data) === null || _profileResult_data === void 0 ? void 0 : _profileResult_data.display_name) || \"Adventurer\"\n        };\n        return player;\n    } catch (error) {\n        console.error(\"API: Failed to get player data:\", error);\n        // Return mock data for development\n        return {\n            id: \"mock-player-id\",\n            user_id: \"mock-user-id\",\n            level: 1,\n            xp: 0,\n            coins: 3,\n            sparks: 0,\n            is_inspired: false,\n            bond_score: 50,\n            mood_state: \"Happy\",\n            day_streak: 0,\n            created_at: new Date().toISOString(),\n            display_name: \"Adventurer\"\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.ts\n"));

/***/ })

});
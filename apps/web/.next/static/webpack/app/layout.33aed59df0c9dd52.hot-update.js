"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./lib/store.ts":
/*!**********************!*\
  !*** ./lib/store.ts ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useGameStore: function() { return /* binding */ useGameStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/../../node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/../../node_modules/zustand/esm/middleware.mjs\");\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api */ \"(app-pages-browser)/./lib/api.ts\");\n\n\n\nconst initialState = {\n    user: {\n        id: null,\n        email: null,\n        isAuthenticated: false\n    },\n    player: null,\n    currentSession: null,\n    inventory: [],\n    classes: [],\n    settings: {\n        soundEnabled: true,\n        notificationsEnabled: true,\n        accessibility: {\n            highContrast: false,\n            dyslexiaFont: false,\n            ttsEnabled: false\n        }\n    },\n    sessionProgress: {\n        sessionId: null,\n        startTime: null,\n        durationMinutes: null,\n        elapsedSeconds: 0,\n        isActive: false,\n        isDisturbed: false,\n        disturbedSeconds: 0\n    }\n};\nconst useGameStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_2__.devtools)((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_2__.persist)((set, get)=>({\n        ...initialState,\n        setUser: (user)=>set((state)=>({\n                    user: user ? {\n                        id: user.id,\n                        email: user.email,\n                        isAuthenticated: true\n                    } : {\n                        id: null,\n                        email: null,\n                        isAuthenticated: false\n                    }\n                })),\n        setPlayer: (player)=>set({\n                player\n            }),\n        updatePlayer: (updates)=>set((state)=>({\n                    player: state.player ? {\n                        ...state.player,\n                        ...updates\n                    } : null\n                })),\n        loadPlayerData: async ()=>{\n            try {\n                console.log(\"Store: Loading player data...\");\n                const playerData = await (0,_api__WEBPACK_IMPORTED_MODULE_0__.getPlayerData)();\n                console.log(\"Store: Player data loaded:\", playerData);\n                if (playerData) {\n                    set({\n                        player: playerData\n                    });\n                }\n            } catch (error) {\n                console.error(\"Store: Failed to load player data:\", error);\n                // Create mock player data for development\n                const mockPlayer = {\n                    id: \"mock-player-id\",\n                    user_id: \"mock-user-id\",\n                    level: 1,\n                    xp: 0,\n                    coins: 3,\n                    sparks: 0,\n                    is_inspired: false,\n                    bond_score: 50,\n                    mood_state: \"Happy\",\n                    day_streak: 0,\n                    created_at: new Date().toISOString(),\n                    display_name: \"Adventurer\"\n                };\n                console.log(\"Store: Using mock player data:\", mockPlayer);\n                set({\n                    player: mockPlayer\n                });\n            }\n        },\n        setCurrentSession: (session)=>set({\n                currentSession: session\n            }),\n        startSession: async (action, durationMinutes)=>{\n            try {\n                console.log(\"Store: Starting session with:\", {\n                    action,\n                    durationMinutes\n                });\n                const response = await (0,_api__WEBPACK_IMPORTED_MODULE_0__.startSession)({\n                    action,\n                    duration_minutes: durationMinutes\n                });\n                console.log(\"Store: API response:\", response);\n                // Create a session object for the store\n                const session = {\n                    id: response.session_id,\n                    user_id: get().user.id,\n                    action,\n                    started_at: new Date().toISOString(),\n                    disturbed_seconds: 0,\n                    dungeon_floor: 0,\n                    boss_tier: \"none\"\n                };\n                console.log(\"Store: Created session object:\", session);\n                set({\n                    currentSession: session,\n                    sessionProgress: {\n                        sessionId: response.session_id,\n                        startTime: Date.now(),\n                        durationMinutes,\n                        elapsedSeconds: 0,\n                        isActive: true,\n                        isDisturbed: false,\n                        disturbedSeconds: 0\n                    }\n                });\n                console.log(\"Store: Session state updated\");\n            } catch (error) {\n                console.error(\"Store: Failed to start session:\", error);\n                // Create mock session for development\n                const mockSession = {\n                    id: \"mock-session-id\",\n                    user_id: \"mock-user-id\",\n                    action,\n                    started_at: new Date().toISOString(),\n                    disturbed_seconds: 0,\n                    dungeon_floor: 0,\n                    boss_tier: \"none\"\n                };\n                console.log(\"Store: Using mock session:\", mockSession);\n                set({\n                    currentSession: mockSession,\n                    sessionProgress: {\n                        sessionId: \"mock-session-id\",\n                        startTime: Date.now(),\n                        durationMinutes,\n                        elapsedSeconds: 0,\n                        isActive: true,\n                        isDisturbed: false,\n                        disturbedSeconds: 0\n                    }\n                });\n            }\n        },\n        stopSession: ()=>set((state)=>({\n                    currentSession: null,\n                    sessionProgress: {\n                        ...state.sessionProgress,\n                        isActive: false\n                    }\n                })),\n        completeSession: async (outcome)=>{\n            try {\n                const state = get();\n                if (!state.currentSession || !state.sessionProgress.sessionId) {\n                    throw new Error(\"No active session to complete\");\n                }\n                const actualDurationMinutes = Math.floor((Date.now() - state.sessionProgress.startTime) / (1000 * 60));\n                console.log(\"Completing session with:\", {\n                    sessionId: state.currentSession.id,\n                    actualDurationMinutes,\n                    disturbedSeconds: state.sessionProgress.disturbedSeconds,\n                    outcome\n                });\n                const response = await (0,_api__WEBPACK_IMPORTED_MODULE_0__.completeSession)({\n                    session_id: state.currentSession.id,\n                    actual_duration_minutes: actualDurationMinutes,\n                    disturbed_seconds: state.sessionProgress.disturbedSeconds,\n                    outcome\n                });\n                console.log(\"Session completion response:\", response);\n                // Update player data with rewards\n                if (state.player) {\n                    console.log(\"Store: Updating player data with rewards:\", {\n                        oldPlayer: state.player,\n                        rewards: {\n                            xp_gained: response.xp_gained,\n                            coins_gained: response.coins_gained,\n                            sparks_gained: response.sparks_gained,\n                            new_level: response.new_level,\n                            new_streak: response.new_streak\n                        }\n                    });\n                    set({\n                        player: {\n                            ...state.player,\n                            xp: state.player.xp + response.xp_gained,\n                            coins: state.player.coins + response.coins_gained,\n                            sparks: state.player.sparks + response.sparks_gained,\n                            level: response.new_level,\n                            day_streak: response.new_streak\n                        },\n                        currentSession: null,\n                        sessionProgress: {\n                            ...state.sessionProgress,\n                            isActive: false\n                        }\n                    });\n                    console.log(\"Store: Player data and session state updated\");\n                }\n                return response;\n            } catch (error) {\n                var _currentState_player, _currentState_player1;\n                console.error(\"Failed to complete session:\", error);\n                // Create mock response for development\n                const currentState = get();\n                const mockResponse = {\n                    xp_gained: 10,\n                    coins_gained: 5,\n                    sparks_gained: ((_currentState_player = currentState.player) === null || _currentState_player === void 0 ? void 0 : _currentState_player.is_inspired) ? 2 : 0,\n                    level_up: false,\n                    new_level: ((_currentState_player1 = currentState.player) === null || _currentState_player1 === void 0 ? void 0 : _currentState_player1.level) || 1,\n                    new_streak: 1\n                };\n                console.log(\"Store: Using mock completion response:\", mockResponse);\n                // Update player data with mock rewards\n                if (currentState.player) {\n                    set({\n                        player: {\n                            ...currentState.player,\n                            xp: currentState.player.xp + mockResponse.xp_gained,\n                            coins: currentState.player.coins + mockResponse.coins_gained,\n                            sparks: currentState.player.sparks + mockResponse.sparks_gained,\n                            level: mockResponse.new_level,\n                            day_streak: mockResponse.new_streak\n                        },\n                        currentSession: null,\n                        sessionProgress: {\n                            ...currentState.sessionProgress,\n                            isActive: false\n                        }\n                    });\n                }\n                return mockResponse;\n            }\n        },\n        updateSessionProgress: (updates)=>set((state)=>({\n                    sessionProgress: {\n                        ...state.sessionProgress,\n                        ...updates\n                    }\n                })),\n        setInventory: (inventory)=>set({\n                inventory\n            }),\n        addToInventory: (item)=>set((state)=>({\n                    inventory: [\n                        ...state.inventory,\n                        item\n                    ]\n                })),\n        updateInventoryItem: (id, updates)=>set((state)=>({\n                    inventory: state.inventory.map((item)=>item.id === id ? {\n                            ...item,\n                            ...updates\n                        } : item)\n                })),\n        setClasses: (classes)=>set({\n                classes\n            }),\n        unlockClass: (classId)=>set((state)=>({\n                    classes: state.classes.map((cls)=>cls.class_id === classId ? {\n                            ...cls,\n                            unlocked: true\n                        } : cls)\n                })),\n        updateSettings: (updates)=>set((state)=>({\n                    settings: {\n                        ...state.settings,\n                        ...updates\n                    }\n                })),\n        resetGame: ()=>set(initialState)\n    }), {\n    name: \"defeat-the-dragon-storage\",\n    partialize: (state)=>({\n            settings: state.settings,\n            user: state.user\n        })\n}), {\n    name: \"defeat-the-dragon-store\"\n}));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/store.ts\n"));

/***/ })

});
"use strict";(()=>{var e={};e.id=572,e.ids=[572],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2615:e=>{e.exports=require("http")},5240:e=>{e.exports=require("https")},8621:e=>{e.exports=require("punycode")},6162:e=>{e.exports=require("stream")},7360:e=>{e.exports=require("url")},1568:e=>{e.exports=require("zlib")},3126:(e,s,i)=>{i.r(s),i.d(s,{originalPathname:()=>I,patchFetch:()=>h,requestAsyncStorage:()=>u,routeModule:()=>d,serverHooks:()=>p,staticGenerationAsyncStorage:()=>m});var r={};i.r(r),i.d(r,{POST:()=>c});var a=i(3036),t=i(5736),o=i(5262),n=i(942),l=i(6981);async function c(e){try{let{email:s}=await e.json();if(!s)return n.NextResponse.json({error:"Email is required"},{status:400});let i=process.env.SUPABASE_SERVICE_ROLE_KEY;if(!i||"your_supabase_service_role_key"===i){console.log("API: Service role key not configured, using fallback method");let e=(0,l.eI)("https://zbqrrtjmavergvuddncs.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpicXJydGptYXZlcmd2dWRkbmNzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU3MDcyNDYsImV4cCI6MjA3MTI4MzI0Nn0.F54csPdpCI6BBhc5NJ5HHJv7LU9xGUGLO1oeGzfUPHE");try{console.log("API: Attempting fallback email check for:",s);let{error:i}=await e.auth.signInWithPassword({email:s,password:"dummy-password-for-check"});if(console.log("API: Fallback check result:",i?.message),i){if(i.message.includes("Invalid login credentials")||i.message.includes("Invalid email or password")||i.message.includes("Email not confirmed")||i.message.includes("Invalid login credentials"))return console.log("API: User exists (invalid credentials)"),n.NextResponse.json({exists:!0,message:"An account with this email already exists"});if(i.message.includes("User not found")||i.message.includes("Unable to validate email address"))return console.log("API: User does not exist"),n.NextResponse.json({exists:!1,message:"Email is available"})}}catch(e){console.error("API: Sign in check error:",e)}return console.log("API: Could not determine email availability, allowing signup"),n.NextResponse.json({exists:!1,message:"Email availability could not be determined"})}console.log("API: Using service role key for email check");let r=(0,l.eI)("https://zbqrrtjmavergvuddncs.supabase.co",i);try{let{data:e,error:i}=await r.auth.admin.listUsers();if(i)throw console.error("API: Service role check error:",i),i;let a=e?.users?.some(e=>e.email===s)||!1;return console.log("API: Service role check result - user exists:",a),n.NextResponse.json({exists:a,message:a?"An account with this email already exists":"Email is available"})}catch(i){console.error("API: Service role check failed, falling back to dummy method:",i);let e=(0,l.eI)("https://zbqrrtjmavergvuddncs.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpicXJydGptYXZlcmd2dWRkbmNzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU3MDcyNDYsImV4cCI6MjA3MTI4MzI0Nn0.F54csPdpCI6BBhc5NJ5HHJv7LU9xGUGLO1oeGzfUPHE");try{let{error:i}=await e.auth.signInWithPassword({email:s,password:"dummy-password-for-check"});if(i){if(i.message.includes("Invalid login credentials")||i.message.includes("Invalid email or password")||i.message.includes("Email not confirmed"))return n.NextResponse.json({exists:!0,message:"An account with this email already exists"});if(i.message.includes("User not found")||i.message.includes("Unable to validate email address"))return n.NextResponse.json({exists:!1,message:"Email is available"})}}catch(e){console.error("API: Fallback check also failed:",e)}return n.NextResponse.json({exists:!1,message:"Email availability could not be determined"})}}catch(e){return console.error("Check email error:",e),n.NextResponse.json({error:"Internal server error"},{status:500})}}let d=new a.AppRouteRouteModule({definition:{kind:t.x.APP_ROUTE,page:"/api/auth/check-email/route",pathname:"/api/auth/check-email",filename:"route",bundlePath:"app/api/auth/check-email/route"},resolvedPagePath:"C:\\Users\\EL Bonuan\\Documents\\GitHub\\defeat-the-dragon\\apps\\web\\app\\api\\auth\\check-email\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:u,staticGenerationAsyncStorage:m,serverHooks:p}=d,I="/api/auth/check-email/route";function h(){return(0,o.patchFetch)({serverHooks:p,staticGenerationAsyncStorage:m})}}};var s=require("../../../../webpack-runtime.js");s.C(e);var i=e=>s(s.s=e),r=s.X(0,[193,746,981],()=>i(3126));module.exports=r})();